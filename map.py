import numpy as np
from PyQt5.QtCore import *
from PyQt5.QtGui import *

class drawMap:

    def __init__(self, height, width, q_window, margin, mapa):
        self.height = height
        self.width = width
        self.d_QWindow = q_window
        self.margin = margin
        self.x = 0
        self.y = 0
        self.mapa = mapa

    def draw(self):
        paint = QPainter()
        paint.begin(self.d_QWindow)
        paint.setRenderHint(QPainter.Antialiasing)

        paint.setBrush(Qt.white)
        clip_rect = QRect(self.x,self.y + 15 ,600,615)
        paint.drawRect(clip_rect)

        for i in range(40):
            for j in range(2, 42):
                if self.mapa[j-2, i] == 1:
                    paint.setPen(Qt.black)
                    paint.setBrush(Qt.lightGray)
                    paint.drawRect(self.x+15*i, self.y+15*j, self.x + 15, self.y + 15)
                elif self.mapa[j-2, i] == 2:
                    paint.setPen(Qt.black)
                    paint.setBrush(Qt.yellow)
                    paint.drawRect(self.x+15*i, self.y+15*j, self.x + 15, self.y + 15)
                elif self.mapa[j-2, i] == 3:
                    paint.setPen(Qt.black)
                    paint.setBrush(Qt.red)
                    paint.drawRect(self.x+15*i, self.y+15*j, self.x + 15, self.y + 15)
                elif self.mapa[j-2, i] == 4:
                    paint.setPen(Qt.black)
                    paint.setBrush(Qt.darkRed)
                    paint.drawRect(self.x+15*i, self.y+15*j, self.x + 15, self.y + 15)
                elif self.mapa[j-2, i] == -1:
                    paint.setPen(Qt.black)
                    paint.setBrush(Qt.black)
                    paint.drawRect(self.x+15*i, self.y+15*j, self.x + 15, self.y + 15)
                elif self.mapa[j-2, i] == -2:
                    paint.setPen(Qt.black)
                    paint.setBrush(Qt.blue)
                    paint.drawRect(self.x+15*i, self.y+15*j, self.x + 15, self.y + 15)

        paint.end()

class Map:

    def __init__(self):

        #1 - sciana niezniszczalna
        #2 - sciana zniszczalna
        #0 - puste pole
        #-1 - bot
        #-2 - gracz
        #3 - bomba

        self.mapa = np.matrix([
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [1, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 1],
            [1, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 1, 2, 0, 1],
            [1, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 0, 1],  # 5
            [1, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 1],
            [1, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 0, 1],
            [1, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 0, 2, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 0, 2, 1, 1, 2, 0, 1],
            [1, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 1, 1, 2, 0, 1],
            [1, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 1, 2, 0, 1],  # 10
            [1, 0, 2, 2, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 1],
            [1, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [1, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 1],
            [1, 0, 2, 1, 0, 2, 2, 1, 1, 2, 2, 0, 2, 2, 2, 1, 1, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 1, 1, 1, 2, 2, 2, 0, 2, 1, 2, 1, 0, 1],
            [1, 0, 2, 1, 0, 2, 2, 1, 1, 2, 2, 0, 2, 2, 2, 1, 1, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 1, 1, 1, 2, 2, 2, 0, 2, 1, 2, 1, 0, 1],  # 15
            [1, 0, 2, 1, 0, 2, 2, 1, 1, 2, 2, 0, 2, 2, 2, 1, 1, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1, 2, 1, 0, 1],
            [1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1],
            [1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 2, 2, 1, 1, 2, 2, 2, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 1],
            [1, 0, 2, 1, 0, 2, 1, 2, 0, 1, 1, 2, 2, 1, 1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 2, 2, 1, 0, 0, 1, 2, 2, 2, 2, 0, 1, 1, 1, 0, 1],
            [1, 0, 2, 1, 0, 2, 1, 2, 0, 1, 1, 2, 2, 1, 1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1],  # 20
            [1, 0, 1, 2, 0, 2, 1, 2, 0, 1, 1, 2, 2, 1, 1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1],
            [1, 0, 1, 2, 0, 2, 1, 2, 0, 1, 1, 2, 2, 1, 1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1],
            [1, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 1],
            [1, 0, 1, 1, 0, 0, 0, 2, 2, 2, 2, 0, 0, 1, 1, 0, 0, 0, 1, 1, 2, 2, 1, 0, 1, 2, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1],
            [1, 0, 1, 1, 0, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0, 1, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1],  # 25
            [1, 0, 1, 1, 0, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 2, 2, 1, 0, 1, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1],
            [1, 0, 1, 1, 0, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 2, 2, 1, 0, 1, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1],
            [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1],
            [1, 0, 1, 2, 0, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 1],
            [1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1, 1, 2, 0, 1, 2, 1, 0, 1, 1, 1, 1, 2, 2, 0, 1, 2, 2, 0, 1],  # 30
            [1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1, 1, 2, 0, 1, 2, 1, 0, 1, 1, 1, 1, 2, 2, 0, 1, 1, 2, 0, 1],
            [1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1, 1, 2, 0, 1, 2, 1, 0, 0, 0, 1, 1, 2, 2, 0, 1, 1, 2, 0, 1],
            [1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 2, 2, 0, 1, 2, 2, 0, 1, 2, 2, 2, 1, 0, 2, 2, 2, 0, 0, 1, 1, 2, 0, 1],
            [1, 0, 1, 2, 2, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 2, 2, 2, 0, 1, 2, 2, 0, 1, 2, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1],
            [1, 0, 0, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 2, 2, 2, 0, 1, 1],  # 35
            [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 1, 1, 0, 0, 1],
            [1, 0, 1, 2, 2, 2, 2, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 2, 2, 1, 1, 1, 0, 1],
            [1, 0, 1, 2, 2, 1, 1, 1, 0, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1],
            [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],  # 40
        ])

    def get_map(self, x, y):
        return self.mapa[x, y]

    def get_all(self):
        return self.mapa

    def set_map(self, x, y, v):
        self.mapa[x, y] = v